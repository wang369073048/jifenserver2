<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.trc.mapper.settlement.IMembershipScoreDailyDetailsMapper">
    <sql id="allSelectionColumn">
        id,
        userId,
        accountDay,
        exchangeInNum,
        consumeNum,
        lotteryConsumeNum,
        consumeCorrectNum,
        balance,
        createTime
	</sql>
	
	<select id="getLastMembershipScoreDailyDetails" parameterType="java.lang.String" resultType="org.trc.domain.order.MembershipScoreDailyDetailsDO">
        select * from membership_score_daily_details
        where userId = #{userId}
        order by accountDay desc,createTime desc limit 1
    </select>
	
    <select id="selectListByParams" parameterType="org.trc.domain.query.SettlementQuery" resultType="org.trc.domain.order.MembershipScoreDailyDetailsDO">
        select * from membership_score_daily_details
        <where>
            <if test="userId != null ">
                AND userId = #{userId}
            </if>
            AND <![CDATA[ UNIX_TIMESTAMP(accountDay) >= unix_timestamp(#{startTime})
            AND UNIX_TIMESTAMP(accountDay) < unix_timestamp(#{endTime})]]>
        </where>
    </select>

    <select id="queryMembershipScoreDailyDetailForExport" parameterType="org.trc.domain.query.SettlementQuery" resultType="org.trc.domain.order.MembershipScoreDailyDetailsDO">
        select * from membership_score_daily_details
        <where>
            <if test="userId != null and userId != ''">
                AND userId = #{userId}
            </if>
            AND <![CDATA[ UNIX_TIMESTAMP(accountDay) >= unix_timestamp(#{startTime})
            AND UNIX_TIMESTAMP(accountDay) < unix_timestamp(#{endTime})]]>
        </where>
    </select>
    
    	
   	
    <!-- 添加数据 -->
    <insert id="insertMembershipScoreDailyDetails" parameterType="com.trc.mall.model.MembershipScoreDailyDetailsDO">
        <selectKey resultType="Long" order="AFTER" keyProperty="id">
        SELECT LAST_INSERT_ID() AS id
        </selectKey>
        INSERT INTO membership_score_daily_details(
            userId,
            accountDay,
            exchangeInNum,
            consumeNum,
            lotteryConsumeNum,
            consumeCorrectNum,
            balance,
            createTime
        )VALUES(
            #{userId},
            #{accountDay},
            #{exchangeInNum},
            #{consumeNum},
            #{lotteryConsumeNum},
            #{consumeCorrectNum},
            #{balance},
            #{createTime}
        )
    </insert>

    <select id="generateMembershipScoreDailyDetailsForExchangeIn" parameterType="java.util.Map" resultType="org.trc.domain.order.MembershipScoreDailyDetailsDO">
        SELECT
            userId,
            sum(score) as exchangeInNum
        FROM
            score_change
        WHERE
            state = 0
            AND userId = #{userId}
            AND businessCode = 'exchangeIn'
            AND <![CDATA[createTime >= #{startTime}
            AND createTime < #{endTime}]]>
        GROUP BY
            userId
        ORDER BY
            userId DESC
    </select>

    <select id="generateMembershipScoreDailyDetailsForConsume" parameterType="java.util.Map" resultType="org.trc.domain.order.MembershipScoreDailyDetailsDO">
        SELECT
            userId,
            sum(score) as consumeNum
        FROM
            score_change
        WHERE
            state = 0
            AND userId = #{userId}
            AND businessCode = 'consume'
            AND <![CDATA[createTime >= #{startTime}
            AND createTime < #{endTime}]]>
        GROUP BY
            userId
        ORDER BY
            userId DESC
    </select>
    
    <!-- add by xab 获取抽奖消费汇总 -->
    <select id="generateMembershipScoreDailyDetailsForLotteryConsume" parameterType="java.util.Map" resultType="org.trc.domain.order.MembershipScoreDailyDetailsDO">
        SELECT
            userId,
            sum(score) as lotteryConsumeNum
        FROM
            score_change
        WHERE
            state = 0
            AND userId = #{userId}
            AND businessCode = 'lotteryConsume'
            AND <![CDATA[createTime >= #{startTime}
            AND createTime < #{endTime}]]>
        GROUP BY
            userId
        ORDER BY
            userId DESC
    </select>
    
    <!-- add by xab 获取消费冲正[也就是退积分]汇总 -->
    <select id="generateMembershipScoreDailyDetailsForConsumeCorrect" parameterType="java.util.Map" resultType="org.trc.domain.order.MembershipScoreDailyDetailsDO">
        SELECT
            userId,
            sum(score) as consumeCorrectNum
        FROM
            score_change
        WHERE
            state = 0
            AND userId = #{userId}
            AND businessCode = 'consumeCorrect'
            AND <![CDATA[createTime >= #{startTime}
            AND createTime < #{endTime}]]>
        GROUP BY
            userId
        ORDER BY
            userId DESC
    </select>

    <select id="getSettlementIntervalForMembershipScoreDailyDetail" parameterType="org.trc.domain.query.SettlementQuery" resultType="org.trc.domain.dto.SettlementIntervalDTO" >
        select min(accountDay) as startAccountDay, MAX(accountDay) as endAccountDay from consumption_summary
        <where>
            <if test="userId != null ">
                AND userId = #{userId}
            </if>
            AND <![CDATA[ UNIX_TIMESTAMP(accountDay) >= unix_timestamp(#{startTime})
            AND UNIX_TIMESTAMP(accountDay) < unix_timestamp(#{endTime})]]>
        </where>
    </select>
</mapper>
