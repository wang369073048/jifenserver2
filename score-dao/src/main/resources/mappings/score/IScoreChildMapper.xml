<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.trc.mapper.score.IScoreChildMapper" >
   <resultMap type="org.trc.domain.score.ScoreChild" id="ScoreChildMap">
        <id column="id" property="id"/>
        <result column="userId" property="userId"/>
        <result column="scoreId" property="scoreId"/>
        <result column="score" property="score"/>
        <result column="freezingScore" property="freezingScore"/>
        <result column="version" property="version"/>
        <result column="expirationTime" property="expirationTime"/>
        <result column="isDeleted" property="isDeleted"/>
        <result column="createTime" property="createTime"/>
        <result column="updateTime" property="updateTime"/>
    </resultMap>
    
    <insert id="insertScoreChild" parameterType="org.trc.domain.score.ScoreChild">
        insert into score_child(
            userId,
            scoreId,
            score,
            freezingScore,
            version,
            expirationTime,
            isDeleted,
            createTime,
            updateTime
        )values(
            #{userId},
            #{scoreId},
            #{score},
            #{freezingScore},
            #{version},
            #{expirationTime},
            0,
            #{createTime},
            #{updateTime}
        )
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
    </insert>
    
    <update id="updateScoreChild" parameterType="org.trc.domain.score.ScoreChild">
        update score_child
        <set>
            <if test="score != null">
                score = #{score},
            </if>
            <if test="freezingScore != null">
                freezingScore = #{freezingScore},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime},
            </if>
            <if test="isDeleted != null">
                isDeleted = #{isDeleted},
            </if>
            version = version+1,
        </set>
        <where>
            userId = #{userId} and expirationTime = #{expirationTime} and version = #{version}
        </where>
    </update>
    
     <select id="queryScoreChildByUserId" parameterType="java.lang.String" resultMap="ScoreChildMap">
        select * from score_child where userId = #{userId} and isDeleted = 0 and score > 0 and <![CDATA[ expirationTime > now()]]> order by expirationTime asc
    </select>
    
    <select id="getLastScoreChildByUserId" parameterType="java.lang.String" resultMap="ScoreChildMap">
        select * from score_child where userId = #{userId} and <![CDATA[ expirationTime > now()]]> and isDeleted = 0 order by expirationTime DESC limit 1
    </select>
    
     <select id="getScoreChildByUserIdAndExpirationTime" parameterType="java.util.Map" resultMap="ScoreChildMap">
        select * from score_child where userId = #{userId} and expirationTime = #{expirationTime} and isDeleted = 0 order by expirationTime asc
     </select>

    <select id="getCountOfScoreChildOutOfDate" parameterType="java.util.Date" resultType="java.lang.Integer">
        select count(*) from score_child where <![CDATA[ expirationTime <= #{expirationTime} ]]> order by createTime asc
    </select>

    <select id="selectScoreChildOutOfDate" parameterType="java.util.Date" resultMap="ScoreChildMap">
        select * from score_child where <![CDATA[ expirationTime <= #{expirationTime} ]]> order by createTime asc limit 1000
    </select>
</mapper>
