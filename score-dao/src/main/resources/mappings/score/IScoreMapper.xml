<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.trc.mapper.score.IScoreMapper" >
	
     <insert id="insertScore" parameterType="org.trc.domain.score.Score">
        insert into score(
            userId,
            userType,
            source,
            previousScore,
            score,
            previousFreezingScore,
            freezingScore,
            accumulativeScore,
            version,
            createTime,
            updateTime
        )values(
            #{userId},
            #{userType},
            #{source},
            #{previousScore},
            #{score},
            #{previousFreezingScore},
            #{freezingScore},
            #{accumulativeScore},
            #{version},
            #{createTime},
            #{updateTime}
        )
        <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() as id
        </selectKey>
    </insert>
    
  <update id="updateScore" parameterType="org.trc.domain.score.Score">
        update score
        <set>
            <if test="previousScore != null">
                previousScore = #{previousScore},
            </if>
            <if test="score != null">
                score = #{score},
            </if>
            <if test="previousFreezingScore != null">
                previousFreezingScore = #{previousFreezingScore},
            </if>
            <if test="freezingScore != null">
                freezingScore = #{freezingScore},
            </if>
            <if test="accumulativeScore != null">
                accumulativeScore = #{accumulativeScore},
            </if>
            <if test="updateTime != null">
                updateTime = #{updateTime},
            </if>
            version = version+1,
        </set>
        <where>
            userId = #{userId} and version = #{version}
        </where>
    </update>
    
    <select id="getScoreByUserId" parameterType="java.lang.String" resultType="org.trc.domain.score.Score">
        select * from score where userId = #{userId}
    </select>
    
    <select id="queryBuyerScore"
            resultType="org.trc.domain.score.Score">
        select * from score where userType = 'BUYER'
    </select>
    
     <select id="getScoreCountByType"  parameterType="java.lang.String"
            resultType="java.lang.Integer">
        select count(*) from score
        <where>
            <if test="_parameter != null">
                and userType = #{userType}
            </if>
        </where>
    </select>
</mapper>
